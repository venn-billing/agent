name: "snapshot"
run-name: ${{ inputs.name }}

on:
  release:
    types: [published]
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-docker-image:
    strategy:
      matrix:
        version: [11, 17]

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: latest
          build-args: JVM_VERSION=${{ matrix.version }}

  build-and-publish-jar:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.5
        with:
          cli: 'latest'

      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-snapshot-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-snapshot-


      - name: Install babashka
        uses: turtlequeue/setup-babashka@v1.5.2
        with:
          babashka-version: 1.3.182

      - name: Create uberjar
        env:
          JDK_VERSION: 17
        run: |
          bb uberjar

      - name: Publish package to GitHub Packages
        run: mvn -B clean deploy --file target/classes/META-INF/maven/io.github.venn-billing/agent/pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
